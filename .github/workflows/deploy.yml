name: SAM Deploy to AWS

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  manual-build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout code
        uses: actions/checkout@v4

      - name: 2. Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: 3. Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 4. Build deployment package manually
        # Este paso nos da control total sobre el empaquetado
        run: |
          set -e # El script fallará si cualquier comando falla
          echo "--- Instalando dependencias de requirements.txt ---"
          python -m pip install --upgrade pip
          pip install -r requirements.txt -t ./package
          echo "--- Dependencias instaladas. Copiando código fuente... ---"
          cp -r src/* ./package/
          echo "--- Código fuente copiado. Contenido del paquete: ---"
          ls -la ./package
          echo "--------------------------------------------------------"
          echo "--- Comprimiendo el paquete de despliegue ---"
          cd package
          zip -r ../deployment_package.zip .

      - name: 5. Deploy Code to Lambda
        run: >
          aws lambda update-function-code
          --function-name extractor-datos-x
          --zip-file fileb://deployment_package.zip

      - name: 6. Wait for code update to finish
        run: sleep 15

      - name: 7. Update Function Configuration
        run: >
          aws lambda update-function-configuration
          --function-name extractor-datos-x
          --handler funcion_lambda_extraccion_x.lambda_handler
          --runtime python3.12
          --timeout 900
          --memory-size 256